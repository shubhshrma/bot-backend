{
  "swagger": "2.0", 
  "info": {
    "version": "1.0.0", 
    "description": "A simple bot to get info about college.", 
    "title": "UIET-BOT"
  }, 
  "host": "uiet-bot.glitch.me",
  "basePath": "/",
  "paths": {
    "/assignments/{branch}/{semester}/{section}?date={date}&boa={boa}": {
      "get": {
        "description": "Returns a list containing assignments", 
        "parameters": [
          {
            "type": "string", 
            "description": "Branch to be searched(acronym in capital)", 
            "name": "branch", 
            "in": "path"
          }, 
          {
            "name": "semester", 
            "type": "integer", 
            "description": "Semester to be searched(number)", 
            "in": "path"
          }, 
          {
            "name": "section", 
            "type": "char", 
            "description": "Section to be searched(capital letter)", 
            "in": "path"
          },
          {
            "name": "date", 
            "type": "string", 
            "description": "Date (yyyy-mm-dd)", 
            "in": "query"
          },
          {
            "name": "boa",
            "type": "string",
            "description": "before or after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "assignments are found",
            "schema": {
              "$ref": "#/definitions/Assignment"
            }
          }
        }, 
        "summary": "Gets some assignments"
      }
    },
    "/exams/{branch}/{semester}?date={date}&boa={boa}": {
      "get": {
        "description": "Returns a list containing exams", 
        "parameters": [
          {
            "type": "string", 
            "description": "Branch to be searched(acronym in capital)", 
            "name": "branch", 
            "in": "path"
          }, 
          {
            "name": "semester", 
            "type": "integer", 
            "description": "Semester to be searched(number)", 
            "in": "path"
          }, 
          {
            "name": "date", 
            "type": "string", 
            "description": "Date (yyyy-mm-dd)", 
            "in": "query"
          },
          {
            "name": "boa",
            "type": "string",
            "description": "before or after",
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "exams are found",
            "schema": {
              "$ref": "#/definitions/Exam"
            }
          }
        }, 
        "summary": "Gets some exams"
      }
    },
    "/users/register": {
      "post": {
        "description": "Enters a new user into the database after verifying that it doesn't already exist.", 
        "parameters": [
          {
            "type": "string", 
            "description": "username", 
            "name": "username", 
            "in": "body"
          }, 
          {
            "name": "password", 
            "type": "string", 
            "description": "password", 
            "in": "body"
          },
          {
            "name": "name", 
            "type": "string", 
            "description": "name", 
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "new user created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "username exists",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "internal server error(some required field empty probably)",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        
        }, 
        "summary": "Registers users"
      }
    },
     "/users/login": {
      "post": {
        "description": "Returns a token for verifying the user on subsequent requests.", 
        "parameters": [
          {
            "type": "string", 
            "description": "username", 
            "name": "username", 
            "in": "body"
          }, 
          {
            "name": "password", 
            "type": "string", 
            "description": "password", 
            "in": "body"
          }
        ],
        "responses": {
          "200": {
            "description": "Auth successful",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "401": {
            "description": "Auth failed",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "internal server error",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        
        }, 
        "summary": "Login users"
      }
    }


  }, 
  "schemes": [
    "https"
  ]
}